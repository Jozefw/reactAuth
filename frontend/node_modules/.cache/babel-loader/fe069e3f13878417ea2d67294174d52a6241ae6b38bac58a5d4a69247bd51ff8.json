{"ast":null,"code":"var _jsxFileName = \"/Users/jozefw/Desktop/ReactAuth/frontend/src/pages/Authentication.js\";\nimport { json } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function AuthSubmitAction({\n  request\n}) {\n  const searchParamsObj = new URL(request.url).searchParams;\n  const data = await request.formData();\n  const mode = searchParamsObj.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: \"Unsupported Sign-up or Loggin\"\n    }, {\n      status: 422\n    });\n  }\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch(`http://localhost:8080/${mode}`, {\n    method: 'POST',\n    header: {\n      'Content-Type': application / json\n    },\n    body: JSON.stringify(authData)\n  });\n}\n_c2 = AuthSubmitAction;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthenticationPage\");\n$RefreshReg$(_c2, \"AuthSubmitAction\");","map":{"version":3,"names":["json","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","AuthSubmitAction","request","searchParamsObj","URL","url","searchParams","data","formData","mode","get","message","status","authData","email","password","response","fetch","method","header","application","body","JSON","stringify","_c2","$RefreshReg$"],"sources":["/Users/jozefw/Desktop/ReactAuth/frontend/src/pages/Authentication.js"],"sourcesContent":["  import { json } from 'react-router-dom';\n  import AuthForm from '../components/AuthForm';\n\n  function AuthenticationPage() {\n    return <AuthForm />;\n  }\n  export default AuthenticationPage;\n\n\n  export async function AuthSubmitAction({request}){\n    const searchParamsObj = new URL(request.url).searchParams;\n    const data = await request.formData();\n    const mode = searchParamsObj.get('mode') || 'login';\n\n    if(mode !== 'login' && mode !== 'signup'){\n      throw json({message:\"Unsupported Sign-up or Loggin\"},{status:422})\n    }\n\n    const authData = {\n      email:data.get('email'),\n      password:data.get('password')\n    }\n    \n    const response = await fetch(`http://localhost:8080/${mode}`,{\n      method: 'POST',\n      header:{\n        'Content-Type':application/json,\n      },\n      body:JSON.stringify(authData)\n    })\n  }"],"mappings":";AAAE,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAG3B,eAAeA,kBAAkB;AAGjC,OAAO,eAAeM,gBAAgBA,CAAC;EAACC;AAAO,CAAC,EAAC;EAC/C,MAAMC,eAAe,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACC,YAAY;EACzD,MAAMC,IAAI,GAAG,MAAML,OAAO,CAACM,QAAQ,CAAC,CAAC;EACrC,MAAMC,IAAI,GAAGN,eAAe,CAACO,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEnD,IAAGD,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACvC,MAAMlB,IAAI,CAAC;MAACoB,OAAO,EAAC;IAA+B,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACpE;EAEA,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAACP,IAAI,CAACG,GAAG,CAAC,OAAO,CAAC;IACvBK,QAAQ,EAACR,IAAI,CAACG,GAAG,CAAC,UAAU;EAC9B,CAAC;EAED,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,yBAAwBR,IAAK,EAAC,EAAC;IAC3DS,MAAM,EAAE,MAAM;IACdC,MAAM,EAAC;MACL,cAAc,EAACC,WAAW,GAAC7B;IAC7B,CAAC;IACD8B,IAAI,EAACC,IAAI,CAACC,SAAS,CAACV,QAAQ;EAC9B,CAAC,CAAC;AACJ;AAACW,GAAA,GArBqBvB,gBAAgB;AAAA,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}